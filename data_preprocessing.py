# -*- coding: utf-8 -*-
"""Data Preprocessing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iXieyqp2z0lWvHj2mCvOUYzvLiRONXjg

# IMPORTING LIBRARIES
"""

import numpy as np
# numpy is for mathematical operations

import matplotlib.pyplot as plt
# matplotlib is a plotting library and pyplot is a sub library for plotting charts

import pandas as pd
# pandas is used for importing and managing datasets

import warnings
# so that the program doesn't stop whenever an exception occurs

import io
# This module helps us to solve file related input and output operations

from google.colab import files
# for importing files from device to google colab

"""# UPLOADING FILES"""

uploaded = files.upload()
df = pd.read_csv(io.BytesIO(uploaded['caw.csv']))

#link for data = https://www.kaggle.com/code/karthikvb/crime-against-women-in-india-2001-2014/data



"""# DESCRIBING DATA"""

df.head()

df.info()

df.shape

"""# DROPPING IRRELEVANT COLUMNS"""

df = df.drop(columns = 'Unnamed: 0')

"""### ADDING A COLUMN NAMED "total_crimes"
"""

df['total_crimes']=(df['Rape']+df['Kidnapping and Abduction']+df['Dowry Deaths']+
                       df['Assault on women with intent to outrage her modesty']+
                       df['Insult to modesty of Women']+df['Cruelty by Husband or his Relatives']+
                       df['Importation of Girls'])

df.describe()

"""# INSERTING INDEPENDENDENT FEATURES IN 'X' AND DEPENDENT FEATURES IN 'Y'"""

x= df.iloc[:,:-1]

y = df.iloc[:,10]

y

"""# CHECKING FOR DUPLICATE VALUES/ ROWS"""

df[df.duplicated()==True]

"""# REMOVING OR REPLACING MISSING VALUES

"""

# imputer handles missing data using statistics(mean, median, mode)

from sklearn.impute import SimpleImputer
imputer = SimpleImputer()

#imputer = SimpleImputer(missing_values=np.nan, strategy='mean')

#imputer.fit(x[:, 1:3])

# x[:, 1:3] = imputer.transform(x[:, 1:3])  
# iske baad make an object and use it in 'x' which contains all the independent features

"""# CHANGING TEXT DATA INTO CATEGORICAL DATA"""

# This is to convert country variables such as State or District into Categorical Data

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()

df['STATE/UT'] = le.fit_transform(df['STATE/UT'])
df['DISTRICT'] = le.fit_transform(df['DISTRICT'])

df.head()

"""# SPLITTING DATASET INTO TRAINING AND TEST DATASET"""

# For splitting the data into training and testing datasets

from sklearn.model_selection import train_test_split

# Model_selection is a method for setting a blueprint to analyze data and then using it to measure new data

x_train, x_test, y_train, y_test = train_test_split(x,y,train_size=0.3)

# x_train: features for the training data
# x_test: features for testing data
# y_train: Dependent variables for training data
# y_test: Independent variable for testing data

